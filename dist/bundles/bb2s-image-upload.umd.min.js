!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/common/http"),require("@angular/core")):"function"==typeof define&&define.amd?define("bb2s-image-upload",["exports","@angular/common","@angular/common/http","@angular/core"],t):t(e["bb2s-image-upload"]={},e.ng.common,e.ng.common.http,e.ng.core)}(this,function(e,t,i,n){"use strict";var o=(r.getDataTransfer=function(e){return e.dataTransfer?e.dataTransfer:e.originalEvent.dataTransfer},r.hasFiles=function(e){return!!e&&(e.indexOf?-1!==e.indexOf("Files"):!!e.contains&&e.contains("Files"))},r.matchRule=function(e,t){return new RegExp("^"+e.split("*").join(".*")+"$").test(t)},r.prototype.onDrop=function(e){var t=r.getDataTransfer(e);if(r.hasFiles(t.types)){e.preventDefault();var i=this.filterFiles(t.files);e.preventDefault(),this.fileOver.emit(!1),this.fileDrop.emit(i)}},r.prototype.onDragLeave=function(e){this.fileOver.emit(!1)},r.prototype.onDragOver=function(e){var t=r.getDataTransfer(e);r.hasFiles(t.types)&&(t.dropEffect="copy",e.preventDefault(),this.fileOver.emit(!0))},r.prototype.filterFiles=function(e){if(!this.accept||0===this.accept.length)return e;for(var t=[],i=0;i<e.length;i++)for(var n=0;n<this.accept.length;n++)if(r.matchRule(this.accept[n],e[i].type)){t.push(e[i]);break}return t},r.decorators=[{type:n.Directive,args:[{selector:"[fileDrop]"}]}],r.propDecorators={accept:[{type:n.Input}],fileOver:[{type:n.Output}],fileDrop:[{type:n.Output}],onDrop:[{type:n.HostListener,args:["drop",["$event"]]}],onDragLeave:[{type:n.HostListener,args:["dragleave",["$event"]]}],onDragOver:[{type:n.HostListener,args:["dragover",["$event"]]}]},r);function r(){this.fileOver=new n.EventEmitter,this.fileDrop=new n.EventEmitter}function s(n,o){var r,l,a,e,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return e={next:t(0),"throw":t(1),"return":t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function i(e){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,l&&(a=2&e[0]?l["return"]:e[0]?l["throw"]||((a=l["return"])&&a.call(l),0):l.next)&&!(a=a.call(l,e[1])).done)return a;switch(l=0,a&&(e=[2&e[0],a.value]),e[0]){case 0:case 1:a=e;break;case 4:return s.label++,{value:e[1],done:!1};case 5:s.label++,l=e[1],e=[0];continue;case 7:e=s.ops.pop(),s.trys.pop();continue;default:if(!(a=0<(a=s.trys).length&&a[a.length-1])&&(6===e[0]||2===e[0])){s=0;continue}if(3===e[0]&&(!a||e[1]>a[0]&&e[1]<a[3])){s.label=e[1];break}if(6===e[0]&&s.label<a[1]){s.label=a[1],a=e;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(e);break}a[2]&&s.ops.pop(),s.trys.pop();continue}e=o.call(n,s)}catch(t){e=[6,t],l=0}finally{r=a=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([t,e])}}}var l=(a.prototype.uploadImage=function(e,t,i,n,o,r){var l,a;if(void 0===n&&(n="image"),!e||""===e)throw new Error("Url is not set! Please set it before doing queries");var s=new FormData;if(o)try{for(var p=function c(e){var t="function"==typeof Symbol&&e[Symbol.iterator],i=0;return t?t.call(e):{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}}}(Object.keys(o)),u=p.next();!u.done;u=p.next()){var d=u.value;s.append(d,o[d])}}catch(f){l={error:f}}finally{try{u&&!u.done&&(a=p["return"])&&a.call(p)}finally{if(l)throw l.error}}return s.append(n,t),this.http.post(e,s,{withCredentials:r,headers:i,observe:"response"})},a.decorators=[{type:n.Injectable}],a.ctorParameters=function(){return[{type:i.HttpClient}]},a);function a(e){this.http=e}var p=function g(e,t){this.src=e,this.file=t,this.pending=!1},u=(d.prototype.ngOnInit=function(){this.fileTooLargeMessage||(this.fileTooLargeMessage="An image was too large and was not uploaded."+(this.maxFileSize?" The maximum file size is "+this.maxFileSize/1024+"KiB.":"")),this.supportedExtensions=this.supportedExtensions?this.supportedExtensions.map(function(e){return"image/"+e}):["image/*"]},d.prototype.deleteAll=function(){var t=this;this.files.forEach(function(e){return t.removed.emit(e)}),this.files=[],this.fileCounter=0,this.inputElement&&(this.inputElement.nativeElement.value="")},d.prototype.deleteFile=function(e){var t=this.files.indexOf(e);this.files.splice(t,1),this.fileCounter--,this.inputElement&&(this.inputElement.nativeElement.value=""),this.removed.emit(e)},d.prototype.previewFileClicked=function(e){this.previewClicked.emit(e)},d.prototype.ngOnChanges=function(e){e.uploadedFiles&&0<e.uploadedFiles.currentValue.length&&this.processUploadedFiles()},d.prototype.onFileChange=function(e){if(!this.disabled){var t=this.max-this.fileCounter,i=e.length>t?t:e.length;this.url&&0!==i&&this.uploadStateChanged.emit(!0),this.fileCounter+=i,this.showFileTooLargeMessage=!1,this.uploadFiles(e,i)}},d.prototype.onResponse=function(e,t){t.serverResponse={status:e.status,response:e},t.pending=!1,this.uploadFinished.emit(t),0==--this.pendingFilesCounter&&this.uploadStateChanged.emit(!1)},d.prototype.processUploadedFiles=function(){for(var e=0;e<this.uploadedFiles.length;e++){var t=this.uploadedFiles[e],i=void 0,n=void 0,o=void 0;n=t instanceof Object?(o=t.url,i=t.blob?t.blob:new Blob([t]),new File([i],t.fileName)):(o=t,i=new Blob([o]),new File([i],o)),this.files.push(new p(o,n))}},d.prototype.uploadFiles=function(a,n){return function e(t,l,a,s){return new(a=a||Promise)(function(e,i){function n(e){try{r(s.next(e))}catch(t){i(t)}}function o(e){try{r(s["throw"](e))}catch(t){i(t)}}function r(t){t.done?e(t.value):new a(function(e){e(t.value)}).then(n,o)}r((s=s.apply(t,l||[])).next())})}(this,void 0,void 0,function(){var t,r,i,l=this;return s(this,function(e){switch(e.label){case 0:t=function(t){var i,n,o;return s(this,function(e){switch(e.label){case 0:return i=a[t],r.maxFileSize&&i.size>r.maxFileSize?(r.fileCounter--,r.inputElement.nativeElement.value="",r.showFileTooLargeMessage=!0,r.uploadStateChanged.emit(!1),[2,"continue"]):[4,r.beforeUpload({file:i,url:r.url,abort:!1})];case 1:return(n=e.sent()).abort?(r.fileCounter--,r.inputElement.nativeElement.value="",[2,"continue"]):(document.createElement("img").src=window.URL.createObjectURL(n.file),(o=new FileReader).addEventListener("load",function(e){var t=new p(e.target.result,n.file);l.files.push(t),l.uploadSingleFile(t,n.url,n.formData)},!1),o.readAsDataURL(n.file),[2])}})},r=this,i=0,e.label=1;case 1:return i<n?[5,t(i)]:[3,4];case 2:e.sent(),e.label=3;case 3:return i++,[3,1];case 4:return[2]}})})},d.prototype.uploadSingleFile=function(t,e,i){var n=this;void 0===e&&(e=this.url),e?(this.pendingFilesCounter++,t.pending=!0,this.imageService.uploadImage(e,t.file,this.headers,this.partName,i,this.withCredentials).subscribe(function(e){return n.onResponse(e,t)},function(e){n.onResponse(e,t),n.deleteFile(t)})):this.uploadFinished.emit(t)},d.decorators=[{type:n.Component,args:[{selector:"image-upload",template:'<div fileDrop\n     [accept]="supportedExtensions"\n     (fileOver)="onFileOver($event)"\n     (fileDrop)="onFileChange($event)"\n     [ngClass]="cssClass"\n     [ngClass]="{\'img-ul-file-is-over\': fileOver}"\n     [ngStyle]="style?.layout">\n  <div class="img-ul-file-upload img-ul-hr-inline-group">\n    <label *ngIf="fileCounter != max"\n           class="img-ul-upload img-ul-button"\n           [ngStyle]="style?.selectButton"\n           [ngClass]="{\'img-ul-disabled\': disabled}">\n      <span [innerText]="buttonCaption"></span>\n      <input type="file"\n             [disabled]="disabled"\n             [accept]="supportedExtensions"\n             [multiple]="max > 1"\n             (change)="onFileChange(input.files)"\n             #input>\n    </label>\n    <button *ngIf="fileCounter > 0"\n            [disabled]="disabled"\n            class="img-ul-clear img-ul-button"\n            (click)="deleteAll()"\n            [ngStyle]="style?.clearButton"\n            [innerText]="clearButtonCaption">\n    </button>\n    <input class="img-ul-drag-box-msg"\n           [disabled]="disabled"\n           [accept]="supportedExtensions"\n           [multiple]="max > 1"\n           (change)="onFileChange(input.files)"\n           #input\n           [innerText]="dropBoxMessage">\n  </div>\n\n  <p class="img-ul-file-too-large"\n     *ngIf="showFileTooLargeMessage"\n     [innerText]="fileTooLargeMessage"></p>\n\n  <div *ngIf="preview"\n       class="img-ul-container img-ul-hr-inline-group"\n       [ngStyle]="style?.previewPanel">\n    <div class="img-ul-image"\n         *ngFor="let file of files"\n         (click)="previewFileClicked(file)"\n         [ngStyle]="{\'background-image\': \'url(\'+ file.src +\')\'}">\n      <div *ngIf="file.pending"\n           class="img-ul-loading-overlay">\n        <div class="img-ul-spinning-circle"></div>\n      </div>\n      <div *ngIf="!file.pending"\n           [ngClass]="{\'img-ul-disabled\': disabled}"\n           class="img-ul-x-mark"\n           (click)="deleteFile(file)">\n        <span class="img-ul-close"></span>\n      </div>\n    </div>\n  </div>\n</div>',styles:[".img-ul{--active-color:#3C9;--common-radius:3px;background-color:#f8f8f8;border-radius:var(--common-radius);border:1px dashed #d0d0d0;font-family:sans-serif;position:relative;color:#9b9b9b}.img-ul-file-is-over{border:var(--active-color) solid}.img-ul-hr-inline-group:after{clear:both;content:\"\";display:table}.img-ul-file-upload{padding:16px}.img-ul-drag-box-msg{display:inline-block;font-weight:600;margin-left:12px;padding-top:14px}label.img-ul-button input[type=file]{display:none;position:fixed;top:-99999px}.img-ul-clear{background-color:red}.img-ul-clear:disabled{background-color:#ff6464;cursor:default}.img-ul-upload{color:red!important;background-color:var(--active-color)}.img-ul-button{-moz-box-shadow:2px 2px 4px 0 rgba(148,148,148,.6);-webkit-box-shadow:2px 2px 4px 0 rgba(148,148,148,.6);border:none;box-shadow:2px 2px 4px 0 rgba(148,148,148,.6);color:#fff;cursor:pointer;display:inline-block;float:left;font-size:1.25em;font-weight:500;padding:10px;text-transform:uppercase}.img-ul-button:active span{display:block;position:relative;top:1px}.img-ul-container{background-color:#fdfdfd;padding:0 10px}.img-ul-image{background:center center/contain no-repeat;display:inline-block;float:left;height:86px;margin:6px;position:relative;width:86px}.img-ul-x-mark{background-color:#000;border-radius:2px;color:#fff;cursor:pointer;float:right;height:20px;margin:2px;opacity:.7;text-align:center;width:20px}.img-ul-close{height:20px;opacity:.7;padding-right:3px;position:relative;width:20px}.img-ul-x-mark:hover .img-ul-close{opacity:1}.img-ul-close:after,.img-ul-close:before{background-color:#fff;border-radius:2px;content:'';height:15px;position:absolute;top:0;width:2px}.img-ul-close:before{transform:rotate(45deg)}.img-ul-close:after{transform:rotate(-45deg)}.img-ul-x-mark.img-ul-disabled{display:none}.img-ul-loading-overlay{background-color:#000;bottom:0;left:0;opacity:.7;position:absolute;right:0;top:0}.img-ul-spinning-circle{height:30px;width:30px;margin:auto;position:absolute;top:0;left:0;bottom:0;right:0;border-radius:50%;border:3px solid rgba(255,255,255,0);border-top:3px solid #fff;border-right:3px solid #fff;-webkit-animation:2s cubic-bezier(.085,.625,.855,.36) infinite spinner;animation:2s cubic-bezier(.085,.625,.855,.36) infinite spinner}.img-ul-file-too-large{color:red;padding:0 15px}.img-ul-upload.img-ul-disabled{background-color:#86e9c9;cursor:default}.img-ul-upload.img-ul-disabled:active span{top:0}@-webkit-keyframes spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"]}]}],d.ctorParameters=function(){return[{type:l}]},d.propDecorators={beforeUpload:[{type:n.Input}],buttonCaption:[{type:n.Input}],disabled:[{type:n.Input}],cssClass:[{type:n.Input,args:["class"]}],clearButtonCaption:[{type:n.Input}],dropBoxMessage:[{type:n.Input}],fileTooLargeMessage:[{type:n.Input}],headers:[{type:n.Input}],max:[{type:n.Input}],maxFileSize:[{type:n.Input}],preview:[{type:n.Input}],partName:[{type:n.Input}],style:[{type:n.Input}],supportedExtensions:[{type:n.Input,args:["extensions"]}],url:[{type:n.Input}],withCredentials:[{type:n.Input}],uploadedFiles:[{type:n.Input}],removed:[{type:n.Output}],uploadStateChanged:[{type:n.Output}],uploadFinished:[{type:n.Output}],previewClicked:[{type:n.Output}],inputElement:[{type:n.ViewChild,args:["input"]}]},d);function d(e){var t=this;this.imageService=e,this.files=[],this.fileCounter=0,this.fileOver=!1,this.showFileTooLargeMessage=!1,this.beforeUpload=function(e){return e},this.buttonCaption="Select Images",this.disabled=!1,this.cssClass="img-ul",this.clearButtonCaption="Clear",this.dropBoxMessage="Drop your images here!",this.max=100,this.preview=!0,this.withCredentials=!1,this.uploadedFiles=[],this.removed=new n.EventEmitter,this.uploadStateChanged=new n.EventEmitter,this.uploadFinished=new n.EventEmitter,this.previewClicked=new n.EventEmitter,this.pendingFilesCounter=0,this.onFileOver=function(e){return t.fileOver=e}}var c=(f.forRoot=function(){return{ngModule:f,providers:[l]}},f.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[u,o],exports:[u]}]}],f);function f(){}e.ImageUploadModule=c,e.ImageUploadComponent=u,e.FileHolder=p,e.ɵb=o,e.ɵa=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=bb2s-image-upload.umd.min.js.map